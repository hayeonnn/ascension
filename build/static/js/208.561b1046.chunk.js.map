{"version":3,"file":"static/js/208.561b1046.chunk.js","mappings":"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","sources":["actions/user_action.js","components/ComponentCard.js","views/Join.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { LOGIN_USER, REGISTER_USER } from \"./types\";\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const request = axios\r\n    .post(\"../views/Login\", dataToSubmit)\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  const request = axios\r\n    .post(\"../views/Join\", dataToSubmit)\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: request,\r\n  };\r\n}\r\n","import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ComponentCard = ({ children, title, subtitle }) => {\r\n  return (\r\n    <Card>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n      </CardTitle>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport ComponentCard from \"../components/ComponentCard\";\r\nimport { registerUser } from \"../actions/user_action\";\r\n//import axios from \"axios\";\r\n\r\nfunction Join(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Usercode, setUsercode] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [ID, setID] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [ConfirmPw, setConfirmPw] = useState(\"\");\r\n  const [Userlevel, setUserlevel] = useState(\"\");\r\n\r\n  const onUsercodeHandler = (event) => {\r\n    setUsercode(event.currentTarget.value);\r\n  };\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const onIDHandler = (event) => {\r\n    setID(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  const onConfirmPwHandler = (event) => {\r\n    setConfirmPw(event.currentTarget.value);\r\n  };\r\n  const onUserlevelHandler = (event) => {\r\n    setUserlevel(event.currentTarget.value);\r\n  };\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (Password !== ConfirmPw) {\r\n      return alert(\"비밀번호와 비밀번호 확인이 같지 않습니다.\");\r\n    }\r\n\r\n    let body = {\r\n      usercode: Usercode,\r\n      name: Name,\r\n      id: ID,\r\n      password: Password,\r\n      confirmPassword: ConfirmPw,\r\n      level: Userlevel,\r\n    };\r\n\r\n    dispatch(registerUser(body)).then((response) => {\r\n      if (response.payload.success) {\r\n        props.history.push(\"/Login\");\r\n      } else {\r\n        alert(\"Error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <ComponentCard\r\n          title=\"⚒️공사중입니다😅\"\r\n          subtitle={<p>페이지를 완성할때까지 조금만 기다려주세요!💕</p>}\r\n        >\r\n          <form\r\n            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            onSubmit={onSubmitHandler}\r\n          >\r\n            <label>유저코드</label>\r\n            <input type=\"text\" value={Usercode} onChange={onUsercodeHandler} />\r\n            <label>ID</label>\r\n            <input type=\"text\" value={ID} onChange={onIDHandler} />\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={Password}\r\n              onChange={onPasswordHandler}\r\n            />\r\n            <label>Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={ConfirmPw}\r\n              onChange={onConfirmPwHandler}\r\n            />\r\n            <label>닉네임</label>\r\n            <input type=\"text\" value={Name} onChange={onNameHandler} />\r\n            <label>유저레벨</label>\r\n            <input\r\n              type=\"text\"\r\n              value={Userlevel}\r\n              onChange={onUserlevelHandler}\r\n            />\r\n            <br />\r\n            <button formAction=\"\">회원가입</button>\r\n          </form>\r\n          <Row>\r\n            <Col lg=\"8\">\r\n              <div className=\"mt-3\">\r\n                <Button color=\"primary\" href=\"/\" tag=\"a\">\r\n                  home\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCard>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\nexport default Join;\r\n"],"names":["loginUser","dataToSubmit","request","axios","then","response","data","type","LOGIN_USER","payload","registerUser","REGISTER_USER","children","title","subtitle","tag","className","props","dispatch","useDispatch","useState","Usercode","setUsercode","Name","setName","ID","setID","Password","setPassword","ConfirmPw","setConfirmPw","Userlevel","setUserlevel","style","display","flexDirection","onSubmit","event","preventDefault","alert","body","usercode","name","id","password","confirmPassword","level","success","history","push","value","onChange","currentTarget","formAction","lg","color","href"],"sourceRoot":""}